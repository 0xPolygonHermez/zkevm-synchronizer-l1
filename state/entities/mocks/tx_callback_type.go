// Code generated by mockery. DO NOT EDIT.

package mock_entities

import (
	entities "github.com/0xPolygonHermez/zkevm-synchronizer-l1/state/entities"
	mock "github.com/stretchr/testify/mock"
)

// TxCallbackType is an autogenerated mock type for the TxCallbackType type
type TxCallbackType struct {
	mock.Mock
}

type TxCallbackType_Expecter struct {
	mock *mock.Mock
}

func (_m *TxCallbackType) EXPECT() *TxCallbackType_Expecter {
	return &TxCallbackType_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *TxCallbackType) Execute(_a0 entities.Tx, _a1 error) {
	_m.Called(_a0, _a1)
}

// TxCallbackType_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type TxCallbackType_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 entities.Tx
//   - _a1 error
func (_e *TxCallbackType_Expecter) Execute(_a0 interface{}, _a1 interface{}) *TxCallbackType_Execute_Call {
	return &TxCallbackType_Execute_Call{Call: _e.mock.On("Execute", _a0, _a1)}
}

func (_c *TxCallbackType_Execute_Call) Run(run func(_a0 entities.Tx, _a1 error)) *TxCallbackType_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(entities.Tx), args[1].(error))
	})
	return _c
}

func (_c *TxCallbackType_Execute_Call) Return() *TxCallbackType_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *TxCallbackType_Execute_Call) RunAndReturn(run func(entities.Tx, error)) *TxCallbackType_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewTxCallbackType creates a new instance of TxCallbackType. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTxCallbackType(t interface {
	mock.TestingT
	Cleanup(func())
}) *TxCallbackType {
	mock := &TxCallbackType{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
